---
title: "GeoComplexity Calculation"
output: rmarkdown::html_vignette
vignette: >
  %\VignetteIndexEntry{GeoComplexity Calculation}
  %\VignetteEncoding{UTF-8}
  %\VignetteEngine{knitr::rmarkdown}
---

```{r, include = FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "##",
  fig.path = "man/figures/gcc/"
)
```

# Calculation methods of geographical complexity

The formula for *shannon entropy* is as follows:

$$
H(X) = - \sum_{i=1}^{n} p(x_i) \log_b p(x_i)
$$

Where $H(X)$ is entropy of the random variable $X$, $p(x_i)$ is probability of the random variable $X$ taking the value $x_i$, $n$is number of possible values that $X$ can take, $b$ is the base of the logarithm, which can be 2 (for bits), $e$ (natural logarithm, for nats), or 10 (for dits).

The *spatial variance* is calculated as:

$$
\Gamma = \frac{\sum_i \sum_{j \neq i} \omega_{ij}\frac{(y_i-y_j)^2}{2}}{\sum_i \sum_{j \neq i} \omega_{ij}}
$$

where $\omega_{ij}$ is the weight between $i$-th location and
$j$-th location; $y_i$ and $y_j$ are the dependent variable values
at the $i$-th and $j$-th locations respectively.

The geographical configuration similarity is calculated as:

$$
S({\bf u}_{\alpha},{\bf v}_{\beta})=min\{E_{i}(e_{i}({\bf u}_{\alpha}),e_{i}({\bf v}_{\beta}))\}
$$

$$
E_{i}({\bf u}_{\alpha},{\bf v}_{\beta})=\exp\left(-{\frac{\left(e_{i}({\bf u}_{\alpha})-e_{i}({\bf v}_{\beta})\right)^{2}}{2\left(\sigma^{2}/\delta({\bf v}_{\beta})\right)^{2}}}\right)
$$

$$
\delta({\bf u}_{\alpha},{\bf v})=\sqrt{\frac{\sum_{\beta=1}^{n}(e({\bf u}_{\alpha})-e({\bf v}_{\beta}))^{2}}{n}}
$$

## Considering the geographical complexity with spatial local dependencies

The formula for geocomplexity which uses local moran measure method is

$$
\rho_i = -\frac{1}{m} Z_i \sum\limits_{j=1}^m W_{ij} Z_j -\frac{1}{m} \sum\limits_{j=1}^m W_{ij} Z_j \frac{1}{V_{k}}\sum\limits_{k=1}^n W_{jk} W_{ik} Z_k
$$

The formula for geocomplexity which uses spatial fluctuation measure
method is

$$
\rho_i = Spatial\_Variance(z_i,z_j)
$$

The formula for geocomplexity which uses shannon entropy measure
method is

$$
\rho_i = Shannon\_Entropy(Z_i,Z_j)
$$

## Considering the geographical complexity with geographical configurations similarities

### Firstly, calculate global similarity:

$$
S = CosineSimilarity(Z_i,Z_j)
$$

or

$$
S = GeographicalConfigurationsSimilarity(Z_i,Z_j)
$$

### The geographic complexity is then calculated:

The formula for geocomplexity which uses spatial fluctuation measure
method is

$$
\rho_i = Spatial\_Variance(S_i,S_j)
$$

The formula for geocomplexity which uses shannon entropy measure
method is

$$
\rho_i = Shannon\_Entropy(S_i,S_j)
$$

# Cases for computing geographical complexity

## Geographical Complexity of Individual Variables

```{r calcul_geocd}
library(sf)
library(geocomplexity)
library(ggplot2)
library(viridis)
library(patchwork)
econineq = sf::read_sf(system.file('extdata/econineq.gpkg',package = 'geocomplexity'))
gc = geocd_vector(econineq)
gc
```

```{r plot_geocd,fig.width=9.5,fig.height=8.5,fig.cap=knitr::asis_output("**Figure 1**. (a) through (i) represent the computed geographical complexity for variable Gini,Induscale,IT,Income,Sexrat,Houseown,Indemp,Indcom and Hiedu.")}
plot_geocd = \(.x){
  ggplot(gc) +
   geom_sf(aes(fill = gc[,.x,drop = TRUE])) +
   scale_fill_viridis(option = "mako", direction = -1,name = "") +
   theme_bw()
}

fig1 = names(gc)[1:9] %>%
  purrr::map(plot_geocd) %>%
  wrap_plots(ncol = 3, byrow = TRUE,
             guides = "collect") +
  plot_annotation(tag_levels = 'a',
                  tag_prefix = '(',
                  tag_suffix = ')',
                  tag_sep = '',
                  theme = theme(plot.tag = element_text(family = "serif"),
                                plot.tag.position = "topleft"))
fig1
```

## Geographical Complexity of Multiple Variables

```{r calcul_geocs}
gc_multi = geocs_vector(dplyr::select(econineq,-Gini))
gc_multi
```

```{r plot_geocs,fig.width=6.5,fig.height=4.5,fig.cap=knitr::asis_output("**Figure 2**. The comprehensive geographical complexity of variables Gini, Induscale, IT, Income, Sexrat, Houseown, Indemp, Indcom and Hiedu.")}
fig2 = ggplot(gc_multi) +
   geom_sf(aes(fill = GC)) +
   scale_fill_viridis(option = "mako", direction = -1) +
   theme_bw()
fig2
```

